{"version":3,"sources":["firebase.js","Todo.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","width","margin","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","style","fontFamily","value","onChange","event","target","placeholder","todo","Button","onClick","collection","doc","id","set","merge","variant","color","size","button","List","ListItemText","primary","Tooltip","title","interactive","delete","Swal","fire","position","icon","showConfirmButton","timer","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.346684fe.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n        apiKey: \"AIzaSyCKYDaK-eFPd83T2rsaMyX2a80_Dz6zs_8\",\r\n        authDomain: \"todo-app-pss.firebaseapp.com\",\r\n        projectId: \"todo-app-pss\",\r\n        storageBucket: \"todo-app-pss.appspot.com\",\r\n        messagingSenderId: \"636558011086\",\r\n        appId: \"1:636558011086:web:7da2b728470e4cfcd2fe9f\",\r\n        measurementId: \"G-SESLZBKVRM\"\r\n    \r\n    \r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, { useState } from \"react\";\r\nimport db from \"./firebase\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  Modal,\r\n  makeStyles,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport \"./Todo.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const updateTodo = () => {\r\n    // Update the Todo with new input text\r\n    db.collection(\"todos\").doc(props.todo.id).set(\r\n      {\r\n        todo: input,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={(e) => setOpen(false)}>\r\n        <div className={classes.paper}>\r\n          <h1 style={{ fontFamily: '\"Yusei Magic\", sans-serif' }}>\r\n            What's your new plan?\r\n          </h1>\r\n          <input\r\n            className=\"modal__input\"\r\n            value={input}\r\n            onChange={(event) => setInput(event.target.value)}\r\n            placeholder={props.todo.todo}\r\n          />\r\n\r\n          <Button\r\n            className=\"modal__btn\"\r\n            onClick={updateTodo}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <List className=\"todo__list\">\r\n        {/* <ListItem> */}\r\n\r\n        <ListItemText className=\"input__todo\" primary={props.todo.todo} />\r\n        {/* </ListItem> */}\r\n\r\n        <Tooltip title=\"Edit\" interactive>\r\n          <CreateIcon\r\n            className=\"edit__todo\"\r\n            onClick={(e) => setOpen(true)}\r\n          ></CreateIcon>\r\n        </Tooltip>\r\n\r\n        <Tooltip title=\"Delete\" interactive>\r\n          <DeleteIcon\r\n            className=\"delete__todo\"\r\n            onClick={(event) =>\r\n              db\r\n                .collection(\"todos\")\r\n                .doc(props.todo.id)\r\n                .delete(\r\n                  Swal.fire({\r\n                    position: \"center\",\r\n                    icon: \"success\",\r\n                    title: \"Deleted\",\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                  })\r\n                )\r\n            }\r\n          />\r\n        </Tooltip>\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import \"./App.css\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport Todo from './Todo'\nimport firebase from 'firebase';\nimport db from './firebase';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n// When the app loads, we need to listen to database and fetch new todos as they get added/removed....\n\nuseEffect(() => {\n    // This code fires when the app.js loads \n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id, todo: doc.data().todo})))\n    })\n  }, []\n  ); \n\n  const addTodo = (event) => {\n    // This will fire off when we click the button\n    event.preventDefault(); // this will prevent page on loading after press submit button\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n\n    setInput(\"\"); // this will clear the input field after hitting submit button\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontFamily: '\"Hachi Maru Pop\", cursive'}}> Todo App </h1>\n\n      <form className=\"form\">\n        <div className=\"form__control\">\n\n        <FormControl >\n          <InputLabel className=\"inputlabel\">Write Todo...</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n        </div>\n\n    <div className=\"btn\">\n        <Button\n        color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={addTodo}\n          disabled={!input}\n        >\n          Add Todo\n        </Button>\n\n    </div>\n      </form>\n      <ul className=\"list__ul\">\n        {todos.map((todo) => {\n          return <Todo todo={todo}/>\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}